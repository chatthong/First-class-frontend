import type { Metadata } from "next"
import { Geist, Geist_Mono } from "next/font/google"
import { cookies } from "next/headers"
import "./globals.css"

import { ThemeProvider } from "@/components/theme-provider"
import {
  COLOR_THEME_STORAGE_KEY,
  DEFAULT_COLOR_THEME,
  resolveColorTheme,
} from "@/lib/color-theme"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  const cookieStore = await cookies()
  const colorThemeCookie = cookieStore.get(COLOR_THEME_STORAGE_KEY)?.value
  const initialColorTheme = resolveColorTheme(colorThemeCookie)
  const dataColorThemeValue =
    initialColorTheme === DEFAULT_COLOR_THEME ? undefined : initialColorTheme

  return (
    <html
      lang="en"
      suppressHydrationWarning
      data-color-theme={dataColorThemeValue}
    >
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
          {children}
        </ThemeProvider>
      </body>
    </html>
  )
}
